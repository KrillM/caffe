<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('fragments/header') %>
    <title>회원가입 페이지</title>
</head>
<body>
    <%- include('fragments/navbar') %>
    <form class="crewForm">
        <div class="row mb-3">
            <label for="inputEmail3" class="col-sm-2 col-form-label">Email</label>
            <div class="col-sm-10">
                <input type="email" class="form-control" id="inputEmail3" onblur="validateEmail()">
                <div id="emailValidationMessage" style="color: red;"></div>
            </div>
        </div>
        <div class="row mb-3">
            <label for="inputNickname" class="col-sm-2 col-form-label">Nickname</label>
            <div class="col-sm-10">
                <input type="text" class="form-control" id="inputNickname" onblur="validateNickname()">
                <div id="nicknameValidationMessage" style="color: red;"></div>
            </div>
        </div>
        <div class="row mb-3">
            <label for="inputPassword3" class="col-sm-2 col-form-label">Password</label>
            <div class="col-sm-10">
                <input type="password" class="form-control" id="inputPassword3" oninput="validatePassword()">
                <div id="passwordValidationMessage" style="color: red;"></div>
            </div>
        </div>
        <div class="row mb-3">
            <label for="inputPhoneNumber" class="col-sm-2 col-form-label">Phone Number</label>
            <div class="col-sm-10">
                <input type="text" class="form-control" id="inputPhoneNumber" oninput="validatePhoneNumber()">
                <div id="phoneNumberValidationMessage" style="color: red;"></div>
            </div>
        </div>

        <button type="submit" class="btn btn-primary">Sign Up</button>
    </form>
    <%- include('fragments/footer') %>

    <script>
         function validateEmail() {
            var emailInput = document.getElementById('inputEmail3');
            var emailValidationMessage = document.getElementById('emailValidationMessage');
            var email = emailInput.value;

            // 간단한 이메일 유효성 검사 (본 예제는 간단한 형식만을 확인)
            var emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

            if (!emailRegex.test(email)) {
                // 유효하지 않은 이메일 주소인 경우
                emailValidationMessage.textContent = '유효하지 않은 이메일 주소입니다.';
                return;
            }

            // 서버로 이메일 중복 확인 요청 (가상의 함수, 실제로는 서버와 통신해야 함)
            if (isEmailAlreadyRegistered(email)) {
                emailValidationMessage.textContent = '이미 등록된 이메일 주소입니다.';
            } else {
                emailValidationMessage.textContent = '';
            }

            console.log(email);
        }

         // 가상의 함수: 이미 등록된 이메일인지 확인
         function isEmailAlreadyRegistered(email) {
            // 여기에서 실제로 서버에 요청하여 이메일이 이미 등록되었는지 확인하는 로직을 추가
            // 이 함수는 이메일이 이미 등록되었다면 true를 반환하고, 그렇지 않으면 false를 반환
            // 실제 서버 요청은 비동기적으로 이루어질 수 있으므로 주의
            return false;
        }

        function validateNickname() {
            var nicknameInput = document.getElementById('inputNickname');
            var nicknameValidationMessage = document.getElementById('nicknameValidationMessage');
            var nickname = nicknameInput.value;

            // 길이가 255를 넘는 경우
            if (nickname.length > 255) {
                nicknameValidationMessage.textContent = '닉네임은 255자를 초과할 수 없습니다.';
                return;
            }

            // 이미 등록된 이메일인 경우
            // 여기에서는 가상의 함수로 대체하셔야 합니다.
            if (isNicknameAlreadyRegistered(nickname)) {
                nicknameValidationMessage.textContent = '이미 등록된 닉네임입니다.';
                return;
            }

            // 유효한 경우
            nicknameValidationMessage.textContent = '';
            console.log(nickname);
        }

        // 가상의 함수: 이미 등록된 이메일인지 확인
        function isNicknameAlreadyRegistered(nickname) {
            // 여기에서 실제로 서버에 요청하여 닉네임이 이미 등록되었는지 확인하는 로직을 추가해야 합니다.
            // 이 함수는 닉네임이 이미 등록되었다면 true를 반환하고, 그렇지 않으면 false를 반환해야 합니다.
            // 실제 서버 요청은 비동기적으로 이루어질 수 있으므로 주의해야 합니다.
            return false;
        }

        function validatePassword() {
            var passwordInput = document.getElementById('inputPassword3');
            var passwordValidationMessage = document.getElementById('passwordValidationMessage');
            var password = passwordInput.value;

            // 비밀번호 길이가 8에서 50 사이인지 확인
            if (password.length < 8 || password.length > 50) {
                passwordValidationMessage.textContent = '비밀번호는 8에서 50 글자 이내여야 합니다.';
                return;
            }

            // 대문자, 소문자, 특수기호, 숫자가 각각 하나 이상 포함되어 있는지 확인
            if (!/[A-Z]/.test(password) || !/[a-z]/.test(password) || !/[!@#$%^&*(),.?":{}|<>0-9]/.test(password)) {
                passwordValidationMessage.textContent = '비밀번호는 대문자, 소문자, 특수기호, 숫자가 각각 하나 이상 포함되어야 합니다.';
                return;
            }

            // 모든 조건을 만족하는 경우
            passwordValidationMessage.textContent = '';
            console.log(password);
        }

        function validatePhoneNumber() {
            var phoneNumberInput = document.getElementById('inputPhoneNumber');
            var phoneNumberValidationMessage = document.getElementById('phoneNumberValidationMessage');
            var phoneNumber = phoneNumberInput.value;

            // 입력값이 정수형인지 확인
            if (!Number.isInteger(Number(phoneNumber))) {
                phoneNumberValidationMessage.textContent = '전화번호는 정수형이어야 합니다.';
                return;
            }

            // 입력값에 '-'가 없는지 확인
            if (phoneNumber.includes('-')) {
                phoneNumberValidationMessage.textContent = '전화번호에는 "-"가 포함되지 않아야 합니다.';
                return;
            }

            // 모든 조건을 만족하는 경우
            phoneNumberValidationMessage.textContent = '';
            console.log(phoneNumber);
        }
    </script>
</body>
</html>