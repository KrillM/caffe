<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('fragments/header') %>
    <%- include('fragments/summernote') %>
    <title>글 수정하기</title>
</head>
<body>
    <%- include('fragments/navbar') %>

    <form class="crewForm" name="updateRepresentImage" action="/write/update/image" method="patch">
        <div class="form-group">
            <label for="representImage">대표 이미지</label>
            <input type="file" name="representImage" class="form-control" id="representImage"><br/>
            <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                <button type="button" class="btn btn-warning" onClick="updateImg()">Change Image</button>
            </div>
        </div>
        <div class="form-group">
            <div id="message3" name="content" style="color: red;"></div>
        </div>
    </form>

    <form class="crewForm" name="updateContent" action="/write/update/content" method="patch" enctype="multipart/form-data">
        <input type="file" name="fakeImage" class="form-control" id="fakeImage" hidden>
        <div class="form-group">
            <label for="title">Title</label>
            <input type="text" name="title" class="form-control" id="title" value="<%= review.title %>">
        </div><br/>
        <textarea id="summernote" name="content"><%- review.content %></textarea><br/>
        <div class="form-group">
            <div id="message" name="content" style="color: red;"></div>
        </div><br/>
        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
            <button type="button" class="btn btn-warning" onClick="updateReview()">Update Review</button>
        </div>
    </form>

    <div class="crewForm d-grid gap-2 d-md-flex justify-content-md-end" name="cancelOrDelete">
        <button type="button" class="btn btn-info" onClick="updateCancel()">Cancel</button>
        <button type="button" class="btn btn-danger" onClick="deleteReview()">Delete</button>
    </div>

    <%- include('fragments/footer') %>
    <%- include('fragments/footerJs') %>
    <script>
        const err3 = document.getElementById("message3");

        const updateImg = async () => {
            const form = document.forms["updateRepresentImage"];
            const formData = new FormData();
            formData.append("representImage", form.representImage.files[0]);

            try {
                const response = await axios.patch('/write/update/image/<%= review.reviewId %>', formData);
        
                if (response.data === 'ok') {
                    err3.innerHTML = '리뷰 대표 이미지가 수정 되었습니다.';
                    setTimeout(() => {
                        err3.innerHTML = '';
                        document.location.href = '/review/<%= review.reviewId %>';
                    }, 2000);
                }
            } catch (error) {
                console.error('Error:', error);
                err3.innerHTML = error.response.data;
                setTimeout(() => {
                    err3.innerHTML = '';
                }, 2000);
            }
        }

        const err = document.getElementById("message");

        const updateCancel = () => {
            history.back();
        };

        $('#summernote').summernote({
            tabsize: 2,
            height: 400,
            lang: 'ko-KR', // default: 'en-US'
        });

        const updateReview = async () => {
            const title = document.getElementById("title").value;
            const content = document.getElementById("summernote").value;

            if (title.length === 0) {
                return (err.innerHTML = '제목을 입력해주세요.');
            }

            if (title.length > 100) {
                return (err.innerHTML = '제목은 100자 이내로 입력해주세요.');
            }

            if (content.length === 0) {
                return (err.innerHTML = '내용을 입력해주세요.');
            }

            const form = document.forms["updateContent"];
            const formData = new FormData();
            formData.append("title", form.title.value);
            formData.append("content", form.content.value);
            formData.append("fakeImage", form.fakeImage.files[0]);
            
            try {
                const response = await axios.patch('/write/update/content/<%= review.reviewId %>', formData);
        
                if (response.data === 'ok') {
                    err.innerHTML = '글이 수정되었습니다.';
                    setTimeout(() => {
                        err.innerHTML = '';
                        document.location.href = '/review/<%= review.reviewId %>';
                    }, 2000);
                }
            } catch (error) {
                console.error('Error:', error);
                err.innerHTML = error.response.data;
                setTimeout(() => {
                    err.innerHTML = '';
                }, 2000);
            }
        };

        function deleteReview(){
            axios({
                method: 'delete',
                url: '/write/delete/<%= review.reviewId %>'
            }).then((res) => {
                alert("글이 삭제되었습니다.");
                location.href = "/";
            }).catch((err) => {
                alert("글 삭제가 불가능합니다.");
            })
        }
    </script>
</body>
</html>