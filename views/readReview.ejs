<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('fragments/header') %>
    <title><%= review.title %></title>
</head>
<body>
    <%- include('fragments/navbar') %>

    <div class="jumbotron jumbotron-fluid crewForm">
        <div class="container">
            <% if(review.representImage !== null) { %>
                <img src="../files/<%= review.representImage %>" class="img-fluid" />
            <% } else { %>
                <img src="../static/virtualLake.png" class="img-fluid" />
            <% } %>
            <h1 class="display-4"><%= review.title %></h1>
            <p class="nav justify-content-end">
                <% if(review.updatedAt.getTime() !== review.createdAt.getTime()) { %>
                    <span>Updated At <%= review.updatedAt.toLocaleString() %></span>
                <% } else { %>
                    <span>Created At <%= review.createdAt.toLocaleString() %></span>
                <% } %>
            </p>
            <p class="nav justify-content-end">
                <span>Written by <%= review.crew.nickname %></span>
            </p>
            <div class="nav justify-content-end">
                <% if(isLoggedIn && crew && crew.crewId === review.writtenBy) { %>
                    <button type="button" class="btn btn-outline-warning btn-sm" onClick="goUpdateReview()">Edit</button>
                    <form name="form-patch" action="/write/update/<%= review.reviewId %>" method="post">
                        <input type="hidden" name="email" value="<%= crew.email %>">
                        <input type="hidden" name="reviewId" value="<%= review.reviewId %>">
                    </form>
                <% } else { %>
                <% } %> 
            </div>
            <hr/>
            <p class="lead"><%- review.content %></p>
            <div class="form-group">
                <label for="comment">Comment</label>
                <% if(isLoggedIn && crew) { %>
                    <form name="create-comment" action="/comment/create" method="post">
                        <input type="text" name="comment" class="form-control addtxt" id="commentInput" /><br/>
                        <div id="message" style="color: red;"></div>
                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <button type="button" class="btn btn-outline-info btn-sm" onclick="cleanComment()">Cancel</button>
                            <button type="button" class="btn btn-outline-success btn-sm" onclick="createCommentProcess()">Write</button>
                            <input type="hidden" name="writtenBy" value="<%= crew.crewId %>">
                            <input type="hidden" name="writtenAt" value="<%= review.reviewId %>">
                        </div>
                    </form>
                <%} else { %>
                    <input type="text" name="comment" placeholder="로그인 후 댓글 작성이 가능합니다." class="form-control addtxt" readonly/><br/> 
                <% } %>
            </div>

            <div class="container">
                <% for(let i=0; i < comment.length; i++) { %>
                    <div class="d-flex flex-column">
                        <div class="second py-2 px-2">
                            <div class="d-flex justify-content-between py-1 pt-2">
                                <div>
                                    <% if(comment[i].crew.profileImage !== null) { %>
                                        <img src="../files/<%= comment[i].crew.profileImage %>" width="30" height="30" class="d-inline-block align-text-top rounded-circle">
                                    <% } else { %>
                                        <svg data-jdenticon-value="<%= comment[i].crew.nickname %>" width="30" height="30"></svg>
                                    <% } %>
                                    <span class="text2"><%= comment[i].crew.nickname %></span>
                                </div>
                            </div>
                            <div class="d-flex justify-content-end">
                                <% if(comment[i].updatedAt.getTime() !== comment[i].createdAt.getTime()) { %>
                                    <span><%= comment[i].updatedAt.toLocaleString() %>에 수정</span>
                                <% } else { %>
                                    <span><%= comment[i].createdAt.toLocaleString() %>에 작성</span>
                                <% } %>
                            </div>
                            <span class="text1"><%= comment[i].comment %></span>
                            <div class="d-flex gap-2 justify-content-end">
                                <% if(isLoggedIn && crew && crew.crewId === comment[i].writtenBy) { %>
                                    <button type="button" class="btn btn-outline-info btn-sm">Update</button>
                                    <button type="button" class="btn btn-outline-danger btn-sm">Delete</button>
                                <% } %>
                            </div>
                        </div>
                    </div>
                <% } %>
            </div>
        </div>
    </div>

    <%- include('fragments/footer') %>
    <%- include('fragments/footerJs') %>
    <script>
        function goUpdateReview() {
            const form = document.forms["form-patch"];
            const email = form.email.value;
            const reviewId = form.reviewId.value;

            axios({
                method: 'get',
                url: `/write/update/<%= review.reviewId %>`,
                data: { email: email }
            }).then((res) => {
                const formInfo = document.forms["form-patch"];
                formInfo.email.value = res.data.email;
                formInfo.reviewId.value = res.data.reviewId;
                formInfo.submit();
            }).catch((err) => {
                alert("글 수정 페이지에 접근할 수 없습니다.");
            });
        }

        function cleanComment(){
            var commentInput = document.getElementById('commentInput');
            commentInput.value = '';
        }

        const err = document.getElementById("message");

        function createCommentProcess(){
            var commentInput = document.getElementById('commentInput');
            var commentValue = commentInput.value.trim();

            if (commentValue === '') {
                return (err.innerHTML = "댓글은 빈칸으로 작성할 수 없습니다.");
            }

            if (commentValue.length > 255) {
                return (err.innerHTML = "댓글은 255자 이상 작성할 수 없습니다.");
            }

            const form = document.forms["create-comment"];

            const data = {
                comment: form.comment.value,
                writtenBy: form.writtenBy.value,
                writtenAt: form.writtenAt.value
            };

            axios({
                method: "post",
                url: `/comment/create`,
                data: data
            }).then((res) => {
                location.reload();
            }).catch((err) => {
                alert("댓글을 작성할 수 없습니다.")
            })
        }
    </script>
</body>
</html>