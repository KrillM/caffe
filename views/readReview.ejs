<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('fragments/header') %>
    <title><%= review.title %></title>
</head>
<body>
    <%- include('fragments/navbar') %>

    <div class="jumbotron jumbotron-fluid crewForm">
        <div class="container">
            <% if(review.representImage !== null) { %>
                <img src="../files/<%= review.representImage %>" class="img-fluid" />
            <% } else { %>
                <img src="../static/virtualLake.png" class="img-fluid" />
            <% } %>
            <h1 class="display-4"><%= review.title %></h1>
            <p class="nav justify-content-end">
                <% if(review.updatedAt.getTime() !== review.createdAt.getTime()) { %>
                    <span>Updated At <%= review.updatedAt.toLocaleString() %></span>
                <% } else { %>
                    <span>Created At <%= review.createdAt.toLocaleString() %></span>
                <% } %>
            </p>
            <p class="nav justify-content-end">
                <span>Written by <%= review.crew.nickname %></span>
            </p>
            <div class="nav justify-content-end">
                <% if(isLoggedIn && crew && crew.crewId === review.writtenBy) { %>
                    <button type="button" class="btn btn-outline-warning btn-sm" onClick="goUpdateReview()">Edit</button>
                    <form name="form-patch" action="/write/update/<%= review.reviewId %>" method="post">
                        <input type="hidden" name="email" value="<%= crew.email %>">
                        <input type="hidden" name="reviewId" value="<%= review.reviewId %>">
                    </form>
                <% } else { %>
                <% } %> 
            </div>
            <hr/>
            <p class="lead"><%- review.content %></p>

            <div class="container">
                <span id="likeCount"> üëçüèª <%= review.likeNum %></span>
                <% if(isLoggedIn && crew) { %>
                    <!-- Ï¢ãÏïÑÏöî ÌëúÏãú Î∞è ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Ï≤òÎ¶¨ -->
                    <button type="button" class="btn btn-outline-primary btn-sm" id="likeButton" onclick="toggleLike('<%= review.reviewId %>', '<%= crew.crewId %>')">
                        <% if(review.isLiked) { %>
                            Ï¢ãÏïÑÏöî Ï∑®ÏÜå
                        <% } else { %>
                            Ï¢ãÏïÑÏöî
                        <% } %>
                    </button>
                <% } else { %>
                <% } %> 
            </div>

            <div class="container">
                <% for(let i=0; i < comment.length; i++) { %>
                    <div class="d-flex flex-column">
                        <div class="second py-2 px-2">
                            <div class="d-flex justify-content-between py-1 pt-2">
                                <div>
                                    <% if(comment[i].crew.profileImage !== null) { %>
                                        <img src="../files/<%= comment[i].crew.profileImage %>" width="30" height="30" class="d-inline-block align-text-top rounded-circle">
                                    <% } else { %>
                                        <svg data-jdenticon-value="<%= comment[i].crew.nickname %>" width="30" height="30"></svg>
                                    <% } %>
                                    <span class="text2"><%= comment[i].crew.nickname %></span>
                                </div>
                            </div>
                            <div class="d-flex justify-content-end">
                                <% if(comment[i].updatedAt.getTime() !== comment[i].createdAt.getTime()) { %>
                                    <span><%= comment[i].updatedAt.toLocaleString() %>Ïóê ÏàòÏ†ï</span>
                                <% } else { %>
                                    <span><%= comment[i].createdAt.toLocaleString() %>Ïóê ÏûëÏÑ±</span>
                                <% } %>
                            </div>

                            <div id="commentDisplay_<%= comment[i].commentId %>">
                                <span class="text1"><%= comment[i].comment %></span>
                            </div>

                            <div id="commentInput_<%= comment[i].commentId %>" style="display: none;">
                                <input type="text" name="comment" class="form-control addtxt" value="<%= comment[i].comment %>" id="newComment_<%= comment[i].commentId %>" /><br/>
                                <div class="d-flex gap-2">
                                    <button type="button" class="btn btn-outline-info btn-sm" onclick="updateCancel('<%= comment[i].commentId %>')">Cancel</button>
                                    <button type="button" class="btn btn-outline-warning btn-sm" onclick="updateCommentProcess('<%= comment[i].commentId %>')">Update</button>
                                    <button type="button" class="btn btn-outline-danger btn-sm" onclick="deleteCommentProcess('<%= comment[i].commentId %>')">Delete</button>
                                </div>
                            </div>

                            <div class="d-flex gap-2 justify-content-end" id="gap_<%= comment[i].commentId %>">
                                <% if(isLoggedIn && crew && crew.crewId === comment[i].writtenBy) { %>
                                    <div id="message2" style="color: red;"></div>
                                    <button type="button" class="btn btn-outline-info btn-sm" onclick="toggleCommentEdit('<%= comment[i].commentId %>')">Update</button>
                                <% } %>
                            </div>
                        </div>
                    </div>
                <% } %>
            </div>

            <div class="form-group">
                <label for="comment">Comment</label>
                <% if(isLoggedIn && crew) { %>
                    <form name="create-comment" action="/comment/create" method="post">
                        <input type="text" name="comment" class="form-control addtxt" id="commentInput" /><br/>
                        <div id="message" style="color: red;"></div>
                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <button type="button" class="btn btn-outline-info btn-sm" onclick="cleanComment()">Cancel</button>
                            <button type="button" class="btn btn-outline-success btn-sm" onclick="createCommentProcess()">Write</button>
                            <input type="hidden" name="writtenBy" value="<%= crew.crewId %>">
                            <input type="hidden" name="writtenAt" value="<%= review.reviewId %>">
                        </div>
                    </form>
                <%} else { %>
                    <input type="text" name="comment" placeholder="Î°úÍ∑∏Ïù∏ ÌõÑ ÎåìÍ∏Ä ÏûëÏÑ±Ïù¥ Í∞ÄÎä•Ìï©ÎãàÎã§." class="form-control addtxt" readonly/><br/> 
                <% } %>
            </div>
        </div>
    </div>

    <%- include('fragments/footer') %>
    <%- include('fragments/footerJs') %>
    <script>
        function goUpdateReview() {
            const form = document.forms["form-patch"];
            const email = form.email.value;
            const reviewId = form.reviewId.value;

            axios({
                method: 'get',
                url: `/write/update/<%= review.reviewId %>`,
                data: { email: email }
            }).then((res) => {
                const formInfo = document.forms["form-patch"];
                formInfo.email.value = res.data.email;
                formInfo.reviewId.value = res.data.reviewId;
                formInfo.submit();
            }).catch((err) => {
                alert("Í∏Ä ÏàòÏ†ï ÌéòÏù¥ÏßÄÏóê Ï†ëÍ∑ºÌï† Ïàò ÏóÜÏäµÎãàÎã§.");
            });
        }

        function cleanComment(){
            var commentInput = document.getElementById('commentInput');
            commentInput.value = '';
        }

        const err = document.getElementById("message");

        function createCommentProcess(){
            var commentInput = document.getElementById('commentInput');
            var commentValue = commentInput.value.trim();

            if (commentValue === '') {
                return (err.innerHTML = "ÎåìÍ∏ÄÏùÄ ÎπàÏπ∏ÏúºÎ°ú ÏûëÏÑ±Ìï† Ïàò ÏóÜÏäµÎãàÎã§.");
            }

            if (commentValue.length > 255) {
                return (err.innerHTML = "ÎåìÍ∏ÄÏùÄ 255Ïûê Ïù¥ÏÉÅ ÏûëÏÑ±Ìï† Ïàò ÏóÜÏäµÎãàÎã§.");
            }

            const form = document.forms["create-comment"];

            const data = {
                comment: form.comment.value,
                writtenBy: form.writtenBy.value,
                writtenAt: form.writtenAt.value
            };

            axios({
                method: "post",
                url: `/comment/create`,
                data: data
            }).then((res) => {
                location.reload();
            }).catch((err) => {
                err.innerHTML = "ÎåìÍ∏ÄÏùÑ ÏûëÏÑ±Ìï† Ïàò ÏóÜÏäµÎãàÎã§.";
            })
        }

        function toggleCommentEdit(commentId) {
            document.getElementById(`commentDisplay_${commentId}`).style.display = 'none';
            document.getElementById(`commentInput_${commentId}`).style.display = 'block';
        }

        function updateCancel(commentId){
            document.getElementById(`commentInput_${commentId}`).style.display = 'none';
            document.getElementById(`commentDisplay_${commentId}`).style.display = 'block';
            location.reload();
        }

        const err2 = document.getElementById("message2");

        const updateCommentProcess = async (commentId) => {
            const updatedComment = document.getElementById(`newComment_${commentId}`).value;
            const comment = updatedComment.trim();

            if (comment === '') {
                return (err2.innerHTML = "ÎåìÍ∏ÄÏùÄ ÎπàÏπ∏ÏúºÎ°ú ÏàòÏ†ïÌï† Ïàò ÏóÜÏäµÎãàÎã§.");
            }

            if (comment.length > 255) {
                return (err2.innerHTML = "ÎåìÍ∏ÄÏùÄ 255Ïûê Ïù¥ÏÉÅ ÏàòÏ†ïÌï† Ïàò ÏóÜÏäµÎãàÎã§.");
            }

            const data = { comment }

            try {
                const response = await axios.patch(`/comment/update/${commentId}`, data);

                if(response.data == "ok"){
                    location.reload();
                }
            } catch (error) {
                err2.innerHTML = "ÎåìÍ∏ÄÏùÑ ÏàòÏ†ïÌï† Ïàò ÏóÜÏäµÎãàÎã§.";
                setTimeout(() => {
                    err.innerHTML = '';
                }, 2000);
            }
        }

        function deleteCommentProcess(commentId){
            axios({
                method: 'delete',
                url: `/comment/delete/${commentId}`
            }).then((res) => {
                alert("ÎåìÍ∏ÄÏùÑ ÏÇ≠Ï†úÌñàÏäµÎãàÎã§.");
                document.location.href=`/review/<%= review.reviewId %>`;
            }).catch((err) => {
                err2.innerHTML = "ÎåìÍ∏ÄÏùÑ ÏÇ≠Ï†úÌï† Ïàò ÏóÜÏäµÎãàÎã§.";
            })
        }

        function toggleLike(reviewId, crewId) {
            axios({
                method: 'post',
                url: `/review/like/${reviewId}/${crewId}`
            }).then((res) => {
                // ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ï¢ãÏïÑÏöîÎ•º ÌÜ†Í∏ÄÌïú Í≤ΩÏö∞, Î≤ÑÌäº ÌÖçÏä§Ìä∏ Î∞è Ïä§ÌÉÄÏùº Î≥ÄÍ≤Ω
                const likeButton = document.getElementById('likeButton');
                const likeCount = document.getElementById('likeCount');
                const isLiked = res.data.isLiked;

                // ÏóÖÎç∞Ïù¥Ìä∏Îêú Ï¢ãÏïÑÏöî ÏàòÎ•º ÌôîÎ©¥Ïóê Î∞òÏòÅ
                likeCount.innerText = res.data.likeNum;

                if (isLiked) {
                    likeButton.innerText = 'Ï¢ãÏïÑÏöî Ï∑®ÏÜå';
                } else {
                    likeButton.innerText = 'Ï¢ãÏïÑÏöî';
                }
                location.reload();
            }).catch((err) => {
                console.error('Ï¢ãÏïÑÏöî ÌÜ†Í∏ÄÏóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.', err);
            });
        }
    </script>
</body>
</html>